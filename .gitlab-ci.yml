image: golang:1.18.2-buster

variables:
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest

stages:
  - all-lint
  - docker-build
  - dev-iac-plan
  - dev-iac-apply
  - prd-iac-plan
  - prd-iac-apply

default:
  interruptible: true

docker-build:
  stage: docker-build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $TAG_COMMIT .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $TAG_COMMIT
  only:
    - develop
    - main

.tf-init-dev:
  before_script:
    - apt-get update && apt-get install software-properties-common curl openssh-client -y
    # Configs and Secrets
    - export TF_VAR_environment=dev
    - export TF_VAR_container_port=33000
    - export TF_VAR_image_tag=$TAG_COMMIT
    - export TF_VAR_registry_username=$REGISTRY_USERNAME
    - export TF_VAR_registry_password=$REGISTRY_PASSWORD
    # Setup SSH
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_SAFEHOUZE" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # Terraform
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    - apt-get update && apt-get install terraform -y
    - terraform version
    - |
      terraform -chdir=.iac init \
      -backend=true \
      -backend-config="key=midowe-web-dev/terraform.tfstate" \
      -force-copy

dev-iac-lint:
  stage: all-lint
  extends: .tf-init-dev
  script:
    - terraform -chdir=.iac validate
  artifacts:
    paths:
      - ".iac/.terraform/providers"

dev-iac-plan:
  stage: dev-iac-plan
  extends: .tf-init-dev
  script:
    - terraform -chdir=.iac plan -out=dev-env.tfplan
    - terraform -chdir=.iac show -json dev-env.tfplan > .iac/dev-env.tfplan.json
  artifacts:
    paths:
      - ".out/*"
      - ".iac/*.json"
      - ".iac/*.tfplan"
      - ".iac/.terraform/providers"
  only:
    - develop
    - main

dev-iac-apply:
  stage: dev-iac-apply
  extends: .tf-init-dev
  interruptible: false
  script:
    - terraform -chdir=.iac apply -auto-approve dev-env.tfplan
    - terraform -chdir=.iac output -json > .iac/dev-env.tfoutput.json
  artifacts:
    paths:
      - ".out/*"
      - ".iac/*.json"
      - ".iac/*.tfplan"
      - ".iac/.terraform/providers"
  only:
    - develop
    - main

.tf-init-prd:
  before_script:
    - apt-get update && apt-get install software-properties-common curl openssh-client -y
    # Configs and Secrets
    - export TF_VAR_environment=prd
    - export TF_VAR_container_port=34000
    - export TF_VAR_image_tag=$TAG_COMMIT
    - export TF_VAR_registry_username=$REGISTRY_USERNAME
    - export TF_VAR_registry_password=$REGISTRY_PASSWORD
    # Setup SSH
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_SAFEHOUZE" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # Terraform
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    - apt-get update && apt-get install terraform -y
    - terraform version
    - |
      terraform -chdir=.iac init \
      -backend=true \
      -backend-config="key=midowe-web-prd/terraform.tfstate" \
      -force-copy

prd-iac-lint:
  stage: all-lint
  extends: .tf-init-prd
  script:
    - terraform -chdir=.iac validate
  artifacts:
    paths:
      - ".iac/.terraform/providers"

prd-iac-plan:
  stage: prd-iac-plan
  extends: .tf-init-prd
  script:
    - terraform -chdir=.iac plan -out=prd-env.tfplan
    - terraform -chdir=.iac show -json prd-env.tfplan > .iac/prd-env.tfplan.json
  artifacts:
    paths:
      - ".out/*"
      - ".iac/*.json"
      - ".iac/*.tfplan"
      - ".iac/.terraform/providers"
  only:
    - main
  when: manual

prd-iac-apply:
  stage: prd-iac-apply
  extends: .tf-init-prd
  interruptible: false
  script:
    - terraform -chdir=.iac apply -auto-approve prd-env.tfplan
    - terraform -chdir=.iac output -json > .iac/prd-env.tfoutput.json
  artifacts:
    paths:
      - ".out/*"
      - ".iac/*.json"
      - ".iac/*.tfplan"
      - ".iac/.terraform/providers"
  only:
    - main
  when: manual
